#!/usr/bin/env php
<?php
if (sizeof($argv) < 2) {
	echo("No input supplied, exiting...");
	exit;
}

$formats = [
	"video" => ["h264", "hevc"],
	"audio" => ["aac"],
	"subtitle" => ["mov_text"],
	"data" => ["bin_data"],
];

$outputFileType = "mp4";
$ffmpegCommand = "ffmpeg";
$ffmpegCommand .= " \\\n";

$streams = [];

echo "Probing Files\n";
for ($inputFileIndex=1; $inputFileIndex < sizeof($argv); $inputFileIndex++) {
	$ffmpegCommand .= ' -i "'.$argv[$inputFileIndex]."\" \\\n";

	$probeOutput = shell_exec('ffprobe -v quiet -print_format json -show_format -show_streams "'.$argv[$inputFileIndex].'" 2>&1');
	$probeObject = json_decode($probeOutput, true);

	if (!isset($probeObject['streams']))
		continue;

	foreach ($probeObject['streams'] as $index => $stream) {
		if (!isset($streams[$stream['codec_type']]))
			$streams[$stream['codec_type']] = [];

		$stream['file'] = $inputFileIndex-1;
		$stream['stream'] = $index;

		array_push($streams[$stream['codec_type']], $stream);
	}
}

$ffmpegCommand .= " -hide_banner -movflags -faststart -map_metadata 0 \\\n";
// var_dump($streams);

$selectedStreams = [];
$selectedStreamCount = 0;

foreach ($streams as $streamType => $streamArray) {
	echo "-----------------------------------------\n";
	echo "Starting ".$streamType." stream section\n\n";

	$streamIndexMaxSize = strlen(sizeof($streamArray)-1);

	while (true) {
		//List all unselected streams
		if (sizeof($streamArray) == 0)
			break;
		foreach ($streamArray as $streamIndex => $stream) {
			echo "\t[".str_pad($streamIndex, $streamIndexMaxSize, " ", STR_PAD_LEFT)."]\t(".$stream['file'].":".$stream['stream'].")\t".$stream['codec_name']."\n";
		}

		//Collect user input
		$selection = readline("  Enter your selection [#]: ");
		echo "\n";
		if ($selection == "")
			break;

		//Push file/stream to ffmpegCommand
		$ffmpegCommand .= ' -map '.$streamArray[$selection]['file'].':'.$streamArray[$selection]['stream'].' -c:'.$selectedStreamCount;
		$selectedStreamCount++;
		
		//Check stream is allowed
		if (in_array($streamArray[$selection]['codec_name'], $formats[$streamType]))
			$ffmpegCommand .= ' copy';
		else
			$ffmpegCommand .= ' '.$formats[$streamType][0];

		//Unset selected stream
		unset($streamArray[$selection]);

		//Nicety
		$ffmpegCommand .= " \\\n";
	}

	echo "Finishing ".$streamType." stream selection\n";
}

// exit;

$ffmpegCommand.= ' "'.substr($argv[1], 0, -4).'_output.'.$outputFileType.'"';
echo "\n\n\n$ffmpegCommand\n\n";

if (readline("Remux? (y): ") == "y") {
	exec($ffmpegCommand);
}